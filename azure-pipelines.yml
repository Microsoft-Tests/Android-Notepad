# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: macos-latest

variables:
  system.debug: 'false'
  lastCommitMessage: App Center SDK integrated
  pr.check.id: ''
  pr.status.id: ''
  user-defined.JAVA_HOME: $(JAVA_HOME_11_X64)
  MOBILECENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  MOBILECENTER_BRANCH: main
  MOBILECENTER_BUILD_ID: $(Build.BuildNumber)
  MOBILECENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  MOBILECENTER_TRIGGER: continuous
  APPCENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  APPCENTER_BRANCH: main
  APPCENTER_BUILD_ID: $(Build.BuildNumber)
  APPCENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  APPCENTER_TRIGGER: continuous
  buildScripts.toolset: '{}'
  moduleName: app
  buildVariant: release
  isRoot: 'false'
  runTests: 'false'
  runLint: 'false'
  keystorePassword: null
  keyAlias: null
  keyPassword: null
  keystoreFilename: keystore.jks
  keystoreSecureFileId: cc700827-4072-4482-809f-af6c5514c5d8
  keystoreSecureFilename: add57760-2d02-42eb-a9b7-0c7097f0eb51
  keystoreEncoded: null
  automaticSigning: 'false'
  buildBundle: 'false'
  MOBILECENTER_ANDROID_MODULE: app
  MOBILECENTER_ANDROID_VARIANT: release
  APPCENTER_ANDROID_MODULE: app
  APPCENTER_ANDROID_VARIANT: release
  sonoma.tags: 'continuous,android,signed'
name: $(BuildID)
resources:
  repositories:
    - repository: self
      type: git
      ref: main
jobs:
  - job: Phase_1
    displayName: Build
    timeoutInMinutes: 30
    cancelTimeoutInMinutes: 0
    pool:
      name: Azure Pipelines
      vmImage: macOS-11
    steps:
      - checkout: self
        clean: true
        submodules: recursive
        lfs: true
      - task: PowerShell@2
        displayName: Install build scripts
        continueOnError: true
        inputs:
          targetType: inline
          scriptName: 'Install build scripts'
          script: >-
            Set-Location -Path '$(Agent.HomeDirectory)'

            Invoke-WebRequest -Uri
            'https://appcenterbuildassets.azureedge.net/buildscripts/appcenter-build-assets-latest.zip'
            -OutFile 'appcenter-build-assets-latest.zip'

            if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force
            -Recurse }

            New-Item -ItemType directory -Path 'scripts' | Out-Null

            unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

            Invoke-Expression 'bash ./scripts/init.sh'
          failOnStderr: true
      - task: ShellScript@2
        displayName: Tag build
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
          args: $(sonoma.tags)
      - task: Gradle@1
        displayName: Gradle Task
        inputs:
          tasks: 'clean :app:assembleRelease '
          options: >-
            -DAPPCENTER_KEYSTORE_PASSWORD="$(keystorePassword)"
            -DMOBILECENTER_KEYSTORE_PASSWORD="$(keystorePassword)"
            -DAPPCENTER_KEYSTORE_FILE_ID="$(keystoreFilename)"
            -DMOBILECENTER_KEYSTORE_FILE_ID="$(keystoreFilename)"
            -DAPPCENTER_KEY_ALIAS="$(keyAlias)"
            -DMOBILECENTER_KEY_ALIAS="$(keyAlias)"
            -DAPPCENTER_KEY_PASSWORD="$(keyPassword)"
            -DMOBILECENTER_KEY_PASSWORD="$(keyPassword)"
          jdkArchitecture: x86
          publishJUnitResults: false
          sqAnalysisBreakBuildIfQualityGateFailed: false
      - task: ShellScript@2
        name: appcenter_android_postprocess_output
        displayName: Android Postprocess
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/android-postprocess.sh
          args: $(build.sourcesdirectory)/app/build/outputs/apk
      - task: AndroidSigning@3
        displayName: Sign APK
        inputs:
          files: $(build.sourcesdirectory)/app/build/**/*.apk
          keystoreFile: $(keystoreSecureFileId)
          keystorePass: $(keystorePassword)
          keystoreAlias: $(keyAlias)
          keyPass: $(keyPassword)
          apksignerArguments: '-verbose'
      - task: CopyFiles@2
        displayName: Copy build files to staging
        inputs:
          SourceFolder: $(build.sourcesdirectory)/app/build/outputs
          Contents: apk/**/*.apk
          TargetFolder: $(build.artifactstagingdirectory)/build
          OverWrite: true
          flattenFolders: true
      - task: CopyFiles@2
        displayName: Copy mapping files to staging
        inputs:
          SourceFolder: $(build.sourcesdirectory)/app/build/outputs
          Contents: mapping/**/mapping.txt
          TargetFolder: $(build.artifactstagingdirectory)/mapping
          OverWrite: true
          flattenFolders: true
      - task: PublishBuildArtifacts@1
        displayName: Publish build
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/build
          ArtifactName: build
      - task: PublishBuildArtifacts@1
        displayName: Publish mapping
        condition: >-
          and(succeeded(),
          startsWith(variables['appcenter_android_postprocess_output.mapping'],
          true))
        continueOnError: true
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/mapping
          ArtifactName: mapping